{"version":3,"file":"img-max-size.service.d.ts","sources":["img-max-size.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Observable } from 'rxjs';\r\nimport { ImgExifService } from './img-exif.service';\r\nexport declare class ImgMaxSizeService {\r\n    private imageExifService;\r\n    timeAtStart: number;\r\n    initialFile: File;\r\n    constructor(imageExifService: ImgExifService);\r\n    compressImage(file: File, maxSizeInMB: number, ignoreAlpha?: boolean, logExecutionTime?: boolean): Observable<any>;\r\n    private getCompressedFile(cvs, quality, maxSizeInMB, currentStep);\r\n    private getResultFile(blob);\r\n    private generateResultFile(blob, name, type, lastModified);\r\n    private blobToFile(blob, name, lastModified);\r\n    private getCalculatedQuality(blob, quality, maxSizeInMB, currentStep);\r\n    private checkCompressionStatus(cvs, blob, quality, maxSizeInMB, currentStep, newQuality);\r\n    private isImgUsingAlpha(imageData);\r\n    private logExecutionTime(logExecutionTime);\r\n}\r\n"]}