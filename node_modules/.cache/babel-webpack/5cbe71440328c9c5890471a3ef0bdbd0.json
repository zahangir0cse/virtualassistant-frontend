{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/zahangiralam/Desktop/Projects/ITA/hotelswave-frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _createClass from \"/Users/zahangiralam/Desktop/Projects/ITA/hotelswave-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/zahangiralam/Desktop/Projects/ITA/hotelswave-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { __decorate } from 'tslib';\nimport { ɵɵdefineInjectable, Injectable, EventEmitter, ElementRef, KeyValueDiffers, Input, Output, Directive, NgModule } from '@angular/core';\nimport 'daterangepicker';\nimport $ from 'jquery';\nimport * as ɵngcc0 from '@angular/core';\n\nvar DaterangepickerConfig = /*@__PURE__*/function () {\n  var DaterangepickerConfig = function DaterangepickerConfig() {\n    _classCallCheck(this, DaterangepickerConfig);\n\n    this.settings = {};\n  };\n\n  DaterangepickerConfig.ɵfac = function DaterangepickerConfig_Factory(t) {\n    return new (t || DaterangepickerConfig)();\n  };\n\n  DaterangepickerConfig.ɵprov = ɵɵdefineInjectable({\n    factory: function DaterangepickerConfig_Factory() {\n      return new DaterangepickerConfig();\n    },\n    token: DaterangepickerConfig,\n    providedIn: \"root\"\n  });\n  return DaterangepickerConfig;\n}();\n\nvar DaterangepickerComponent = /*@__PURE__*/function () {\n  var DaterangepickerComponent = /*#__PURE__*/function () {\n    function DaterangepickerComponent(input, config, differs) {\n      _classCallCheck(this, DaterangepickerComponent);\n\n      this.input = input;\n      this.config = config;\n      this.differs = differs;\n      this.targetOptions = {};\n      this._differ = {};\n      this.options = {};\n      this.selected = new EventEmitter();\n      this.cancelDaterangepicker = new EventEmitter();\n      this.applyDaterangepicker = new EventEmitter();\n      this.hideCalendarDaterangepicker = new EventEmitter();\n      this.showCalendarDaterangepicker = new EventEmitter();\n      this.hideDaterangepicker = new EventEmitter();\n      this.showDaterangepicker = new EventEmitter();\n      this._differ['options'] = this.differs.find(this.options).create();\n      this._differ['settings'] = this.differs.find(this.config.settings).create();\n    }\n\n    _createClass(DaterangepickerComponent, [{\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        this.render();\n        this.attachEvents();\n      }\n    }, {\n      key: \"ngDoCheck\",\n      value: function ngDoCheck() {\n        var optionsChanged = this._differ['options'].diff(this.options);\n\n        var settingsChanged = this._differ['settings'].diff(this.config.settings);\n\n        if (optionsChanged || settingsChanged) {\n          this.render();\n          this.attachEvents();\n\n          if (this.activeRange && this.datePicker) {\n            this.datePicker.setStartDate(this.activeRange.start);\n            this.datePicker.setEndDate(this.activeRange.end);\n          }\n        }\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.destroyPicker();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        this.targetOptions = Object.assign({}, this.config.settings, this.options);\n        $(this.input.nativeElement).daterangepicker(this.targetOptions, this.callback.bind(this));\n\n        if (this.options.customClasses && this.options.customClasses.length) {\n          var _iterator = _createForOfIteratorHelper(this.options.customClasses),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var customClass = _step.value;\n              this.datePicker = $(this.input.nativeElement).data('daterangepicker').container.addClass(customClass);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        } else {\n          this.datePicker = $(this.input.nativeElement).data('daterangepicker');\n        }\n      }\n    }, {\n      key: \"callback\",\n      value: function callback(start, end, label) {\n        this.activeRange = {\n          start: start,\n          end: end,\n          label: label\n        };\n        this.selected.emit(this.activeRange);\n      }\n    }, {\n      key: \"destroyPicker\",\n      value: function destroyPicker() {\n        try {\n          $(this.input.nativeElement).data('daterangepicker').remove();\n        } catch (e) {\n          console.log(e.message);\n        }\n      }\n    }, {\n      key: \"attachEvents\",\n      value: function attachEvents() {\n        var _this = this;\n\n        $(this.input.nativeElement).on('cancel.daterangepicker', function (e, picker) {\n          var event = {\n            event: e,\n            picker: picker\n          };\n\n          _this.cancelDaterangepicker.emit(event);\n        });\n        $(this.input.nativeElement).on('apply.daterangepicker', function (e, picker) {\n          var event = {\n            event: e,\n            picker: picker\n          };\n\n          _this.applyDaterangepicker.emit(event);\n        });\n        $(this.input.nativeElement).on('hideCalendar.daterangepicker', function (e, picker) {\n          var event = {\n            event: e,\n            picker: picker\n          };\n\n          _this.hideCalendarDaterangepicker.emit(event);\n        });\n        $(this.input.nativeElement).on('showCalendar.daterangepicker', function (e, picker) {\n          var event = {\n            event: e,\n            picker: picker\n          };\n\n          _this.showCalendarDaterangepicker.emit(event);\n        });\n        $(this.input.nativeElement).on('hide.daterangepicker', function (e, picker) {\n          var event = {\n            event: e,\n            picker: picker\n          };\n\n          _this.hideDaterangepicker.emit(event);\n        });\n        $(this.input.nativeElement).on('show.daterangepicker', function (e, picker) {\n          var event = {\n            event: e,\n            picker: picker\n          };\n\n          _this.showDaterangepicker.emit(event);\n        });\n      }\n    }]);\n\n    return DaterangepickerComponent;\n  }();\n\n  DaterangepickerComponent.ɵfac = function DaterangepickerComponent_Factory(t) {\n    return new (t || DaterangepickerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DaterangepickerConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.KeyValueDiffers));\n  };\n\n  DaterangepickerComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: DaterangepickerComponent,\n    selectors: [[\"\", \"daterangepicker\", \"\"]],\n    inputs: {\n      options: \"options\"\n    },\n    outputs: {\n      selected: \"selected\",\n      cancelDaterangepicker: \"cancelDaterangepicker\",\n      applyDaterangepicker: \"applyDaterangepicker\",\n      hideCalendarDaterangepicker: \"hideCalendarDaterangepicker\",\n      showCalendarDaterangepicker: \"showCalendarDaterangepicker\",\n      hideDaterangepicker: \"hideDaterangepicker\",\n      showDaterangepicker: \"showDaterangepicker\"\n    }\n  });\n  return DaterangepickerComponent;\n}();\n\nvar Daterangepicker = /*@__PURE__*/function () {\n  var Daterangepicker = function Daterangepicker() {\n    _classCallCheck(this, Daterangepicker);\n  };\n\n  Daterangepicker.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: Daterangepicker\n  });\n  Daterangepicker.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    factory: function Daterangepicker_Factory(t) {\n      return new (t || Daterangepicker)();\n    },\n    imports: [[]]\n  });\n  return Daterangepicker;\n}();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Daterangepicker, {\n    declarations: [DaterangepickerComponent],\n    exports: [DaterangepickerComponent]\n  });\n})();\n/*\n * Public API Surface of ng2-daterangepicker\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Daterangepicker, DaterangepickerComponent, DaterangepickerConfig };","map":null,"metadata":{},"sourceType":"module"}