{"version":3,"file":"angular-datatables.umd.min.js","sources":["../src/angular-datatables.directive.js","../src/angular-datatables.module.js"],"sourcesContent":["/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { Directive, ElementRef, Input, Renderer2, ViewContainerRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nvar DataTableDirective = /** @class */ (function () {\n    function DataTableDirective(el, vcr, renderer) {\n        this.el = el;\n        this.vcr = vcr;\n        this.renderer = renderer;\n        /**\n         * The DataTable option you pass to configure your table.\n         */\n        this.dtOptions = {};\n    }\n    DataTableDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.dtTrigger) {\n            this.dtTrigger.subscribe(function () {\n                _this.displayTable();\n            });\n        }\n        else {\n            this.displayTable();\n        }\n    };\n    DataTableDirective.prototype.ngOnDestroy = function () {\n        if (this.dtTrigger) {\n            this.dtTrigger.unsubscribe();\n        }\n        if (this.dt) {\n            this.dt.destroy(true);\n        }\n    };\n    DataTableDirective.prototype.displayTable = function () {\n        var _this = this;\n        var self = this;\n        this.dtInstance = new Promise(function (resolve, reject) {\n            Promise.resolve(_this.dtOptions).then(function (dtOptions) {\n                // Using setTimeout as a \"hack\" to be \"part\" of NgZone\n                setTimeout(function () {\n                    // Assign DT properties here\n                    var options = {\n                        rowCallback: function (row, data, index) {\n                            if (dtOptions.columns) {\n                                var columns_1 = dtOptions.columns;\n                                // Filter columns with pipe declared\n                                var colsWithPipe = columns_1.filter(function (x) { return x.ngPipeInstance && !x.ngTemplateRef; });\n                                // Iterate\n                                colsWithPipe.forEach(function (el) {\n                                    var pipe = el.ngPipeInstance;\n                                    // find index of column using `data` attr\n                                    var i = columns_1.findIndex(function (e) { return e.data == el.data; });\n                                    // get <td> element which holds data using index\n                                    var rowFromCol = row.childNodes.item(i);\n                                    // Transform data with Pipe\n                                    var rowVal = $(rowFromCol).text();\n                                    var rowValAfter = pipe.transform(rowVal);\n                                    // Apply transformed string to <td>\n                                    $(rowFromCol).text(rowValAfter);\n                                });\n                                // Filter columns using `ngTemplateRef`\n                                var colsWithTemplate = columns_1.filter(function (x) { return x.ngTemplateRef && !x.ngPipeInstance; });\n                                colsWithTemplate.forEach(function (el) {\n                                    var _a = el.ngTemplateRef, ref = _a.ref, context = _a.context;\n                                    // get <td> element which holds data using index\n                                    var index = columns_1.findIndex(function (e) { return e.data == el.data; });\n                                    var cellFromIndex = row.childNodes.item(index);\n                                    // render onto DOM\n                                    // finalize context to be sent to user\n                                    var _context = Object.assign({}, context, context === null || context === void 0 ? void 0 : context.userData, {\n                                        adtData: data\n                                    });\n                                    var instance = self.vcr.createEmbeddedView(ref, _context);\n                                    self.renderer.appendChild(cellFromIndex, instance.rootNodes[0]);\n                                });\n                            }\n                            // run user specified row callback if provided.\n                            if (_this.dtOptions.rowCallback) {\n                                _this.dtOptions.rowCallback(row, data, index);\n                            }\n                        }\n                    };\n                    // merge user's config with ours\n                    options = Object.assign({}, dtOptions, options);\n                    _this.dt = $(_this.el.nativeElement).DataTable(options);\n                    resolve(_this.dt);\n                });\n            });\n        });\n    };\n    DataTableDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[datatable]'\n                },] }\n    ];\n    DataTableDirective.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ViewContainerRef },\n        { type: Renderer2 }\n    ]; };\n    DataTableDirective.propDecorators = {\n        dtOptions: [{ type: Input }],\n        dtTrigger: [{ type: Input }]\n    };\n    return DataTableDirective;\n}());\nexport { DataTableDirective };\n//# sourceMappingURL=angular-datatables.directive.js.map","/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataTableDirective } from './angular-datatables.directive';\nvar DataTablesModule = /** @class */ (function () {\n    function DataTablesModule() {\n    }\n    DataTablesModule.forRoot = function () {\n        return {\n            ngModule: DataTablesModule\n        };\n    };\n    DataTablesModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule],\n                    declarations: [DataTableDirective],\n                    exports: [DataTableDirective]\n                },] }\n    ];\n    return DataTablesModule;\n}());\nexport { DataTablesModule };\n//# sourceMappingURL=angular-datatables.module.js.map"],"names":["DataTableDirective","prototype","ngOnInit","_this","this","dtTrigger","subscribe","displayTable","ngOnDestroy","unsubscribe","dt","destroy","self","dtInstance","Promise","resolve","reject","dtOptions","then","setTimeout","options","rowCallback","row","data","index","columns","columns_1","filter","x","ngPipeInstance","ngTemplateRef","forEach","el","pipe","i","findIndex","e","rowFromCol","childNodes","item","rowVal","$","text","rowValAfter","transform","_a","ref","context","cellFromIndex","_context","Object","assign","userData","adtData","instance","vcr","createEmbeddedView","renderer","appendChild","rootNodes","nativeElement","DataTable","decorators","type","Directive","args","selector","ctorParameters","ElementRef","ViewContainerRef","Renderer2","propDecorators","Input","DataTablesModule","forRoot","ngModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"kaAQIA,GAUAA,EAAmBC,UAAUC,SAAW,WACpC,IAAIC,EAAQC,KACRA,KAAKC,UACLD,KAAKC,UAAUC,UAAU,WACrBH,EAAMI,iBAIVH,KAAKG,gBAGbP,EAAmBC,UAAUO,YAAc,WACnCJ,KAAKC,WACLD,KAAKC,UAAUI,cAEfL,KAAKM,IACLN,KAAKM,GAAGC,SAAQ,IAGxBX,EAAmBC,UAAUM,aAAe,WACxC,IAAIJ,EAAQC,KACRQ,EAAOR,KACXA,KAAKS,WAAa,IAAIC,QAAQ,SAAUC,EAASC,GAC7CF,QAAQC,QAAQZ,EAAMc,WAAWC,KAAK,SAAUD,GAE5CE,WAAW,WAEP,IAAIC,EAAU,CACVC,YAAa,SAAUC,EAAKC,EAAMC,GAC9B,GAAIP,EAAUQ,QAAS,CACnB,IAAIC,EAAYT,EAAUQ,QAEPC,EAAUC,OAAO,SAAUC,GAAK,OAAOA,EAAEC,iBAAmBD,EAAEE,gBAEpEC,QAAQ,SAAUC,GAC3B,IAAIC,EAAOD,EAAGH,eAEVK,EAAIR,EAAUS,UAAU,SAAUC,GAAK,OAAOA,EAAEb,MAAQS,EAAGT,OAE3Dc,EAAaf,EAAIgB,WAAWC,KAAKL,GAEjCM,EAASC,EAAEJ,GAAYK,OACvBC,EAAcV,EAAKW,UAAUJ,GAEjCC,EAAEJ,GAAYK,KAAKC,KAGAjB,EAAUC,OAAO,SAAUC,GAAK,OAAOA,EAAEE,gBAAkBF,EAAEC,iBACnEE,QAAQ,SAAUC,GAC/B,IAAIa,EAAKb,EAAGF,cAAegB,EAAMD,EAAGC,IAAKC,EAAUF,EAAGE,QAElDvB,EAAQE,EAAUS,UAAU,SAAUC,GAAK,OAAOA,EAAEb,MAAQS,EAAGT,OAC/DyB,EAAgB1B,EAAIgB,WAAWC,KAAKf,GAGpCyB,EAAWC,OAAOC,OAAO,GAAIJ,EAASA,MAAAA,OAAyC,EAASA,EAAQK,SAAU,CAC1GC,QAAS9B,IAET+B,EAAW1C,EAAK2C,IAAIC,mBAAmBV,EAAKG,GAChDrC,EAAK6C,SAASC,YAAYV,EAAeM,EAASK,UAAU,MAIhExD,EAAMc,UAAUI,aAChBlB,EAAMc,UAAUI,YAAYC,EAAKC,EAAMC,KAKnDJ,EAAU8B,OAAOC,OAAO,GAAIlC,EAAWG,GACvCjB,EAAMO,GAAK+B,EAAEtC,EAAM6B,GAAG4B,eAAeC,UAAUzC,GAC/CL,EAAQZ,EAAMO,WAK9BV,EAAmB8D,WAAa,CAC5B,CAAEC,KAAMC,YAAWC,KAAM,CAAC,CACdC,SAAU,kBAG1BlE,EAAmBmE,eAAiB,WAAc,MAAO,CACrD,CAAEJ,KAAMK,cACR,CAAEL,KAAMM,oBACR,CAAEN,KAAMO,eAEZtE,EAAmBuE,eAAiB,CAChCtD,UAAW,CAAC,CAAE8C,KAAMS,UACpBnE,UAAW,CAAC,CAAE0D,KAAMS,WAEjBxE,GAnGP,SAASA,EAAmBgC,EAAIuB,EAAKE,GACjCrD,KAAK4B,GAAKA,EACV5B,KAAKmD,IAAMA,EACXnD,KAAKqD,SAAWA,EAIhBrD,KAAKa,UAAY,OCPrBwD,GAGAA,EAAiBC,QAAU,WACvB,MAAO,CACHC,SAAUF,IAGlBA,EAAiBX,WAAa,CAC1B,CAAEC,KAAMa,WAAUX,KAAM,CAAC,CACbY,QAAS,CAACC,gBACVC,aAAc,CAAC/E,GACfgF,QAAS,CAAChF,OAGnByE,GAdP,SAASA"}