{"version":3,"file":"ng2-pica.service.d.ts","sources":["ng2-pica.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Observable } from 'rxjs';\r\nimport { ImgExifService } from './img-exif.service';\r\nexport interface ResizeCanvasOptions {\r\n    quality?: number;\r\n    alpha?: boolean;\r\n    unsharpAmount?: number;\r\n    unsharpRadius?: number;\r\n    unsharpThreshold?: number;\r\n}\r\nexport interface ResizeBufferOptions {\r\n    src: Uint8Array;\r\n    width: number;\r\n    height: number;\r\n    toWidth: number;\r\n    toHeight: number;\r\n    quality?: number;\r\n    alpha?: boolean;\r\n    unsharpAmount?: number;\r\n    unsharpRadius?: number;\r\n    unsharpThreshold?: number;\r\n}\r\nexport declare class Ng2PicaService {\r\n    private imageExifService;\r\n    constructor(imageExifService: ImgExifService);\r\n    resize(files: File[], width: number, height: number, keepAspectRatio?: boolean): Observable<any>;\r\n    resizeCanvas(from: HTMLCanvasElement, to: HTMLCanvasElement, options: ResizeCanvasOptions): Promise<HTMLCanvasElement>;\r\n    resizeBuffer(options: ResizeBufferOptions): Promise<Uint8Array>;\r\n    private resizeFile(file, width, height, keepAspectRatio?);\r\n    private isImgUsingAlpha(imageData);\r\n    private generateResultFile(blob, name, type, lastModified);\r\n    private blobToFile(blob, name, lastModified);\r\n}\r\n"]}